{"version":3,"file":"static/js/834.544f5161.chunk.js","mappings":"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","sources":["components/ChangeContact/ChangeContact.styled.js","components/ChangeContact/ChangeContact.jsx","components/ContactsListItem/ContactsListItem.styled.js","components/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/PhoneBookForm/PhoneBookForm.styled.js","components/PhoneBookForm/PhoneBookForm.jsx","components/ContactsFilter/ContactsFilter.styled.js","components/ContactsFilter/ContactsFilter.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { IoPersonCircle } from 'react-icons/io5';\nimport { GiRotaryPhone } from 'react-icons/gi';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const InputWrap = styled.div`\n  position: relative;\n\n  & + & {\n    margin-left: 25px;\n  }\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  color: ${p => p.theme.colors.mainText};\n`;\n\nexport const Input = styled.input`\n  color: #000000;\n  font-weight: 400;\n  width: 250px;\n  height: 40px;\n  padding: 3px 20px 3px 40px;\n  margin-left: 5px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: inset 0px 0px 12px 0px rgba(0, 0, 0, 0.35);\n  border: none;\n  background: ${p => p.theme.colors.inputBg};\n  font-size: ${p => p.theme.fontSizes.m};\n  opacity: 0.9;\n`;\n\nexport const PersonIcon = styled(IoPersonCircle)`\n  position: absolute;\n  top: 8px;\n  left: 75px;\n  height: 25px;\n  width: 25px;\n  z-index: 5;\n`;\n\nexport const PhoneIcon = styled(GiRotaryPhone)`\n  position: absolute;\n  top: 8px;\n  left: 100px;\n  height: 25px;\n  width: 25px;\n  z-index: 5;\n`;\n\nexport const NavBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 78px;\n  height: 35px;\n  margin-left: auto;\n  padding: 3px 9px;\n  margin-right: 40px;\n  border-radius: 3px;\n  border: ${p => p.theme.borders.none};\n  text-decoration: none;\n  text-transform: uppercase;\n  font-size: ${p => p.theme.fontSizes.xs};\n  background-color: #3f51b5;\n  color: white;\n  z-index: 9;\n  box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%),\n    0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { changeContact } from '../../redux/contactsOperation';\nimport {\n  Form,\n  Input,\n  InputWrap,\n  Label,\n  PersonIcon,\n  PhoneIcon,\n  NavBtn,\n} from './ChangeContact.styled';\n\nexport const ChangeContact = ({\n  nameForChange,\n  numberForChange,\n  id,\n  toggleShowChangeMenu,\n}) => {\n  const [name, setName] = useState(() => nameForChange);\n  const [number, setNumber] = useState(() => numberForChange);\n  const contacts = useSelector(state => state.contacts.contacts);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        toast.error(`case ${name} doesn't support`);\n        break;\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const isRepeatContact = contacts.find(\n      ({ name: existedName }) => existedName === name\n    );\n\n    if (isRepeatContact) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    }\n\n    try {\n      dispatch(changeContact({ id, name, number }));\n    } catch (error) {}\n    toast.success(`contact ${name} was successfully changed`);\n    toggleShowChangeMenu();\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <InputWrap>\n        <Label htmlFor=\"name\">Name</Label>\n        <PersonIcon />\n        <Input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          id=\"name\"\n          minLength={3}\n          maxLength={20}\n          placeholder=\"Change name\"\n          onChange={onChange}\n          required\n        />\n      </InputWrap>\n\n      <InputWrap>\n        <Label htmlFor=\"number\">Number</Label>\n        <PhoneIcon />\n        <Input\n          type=\"tel\"\n          value={number}\n          name=\"number\"\n          id=\"number\"\n          placeholder=\"Change phone\"\n          pattern=\"^\\+380\\d{3}\\d{2}\\d{2}\\d{2}$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={onChange}\n          required\n        />\n      </InputWrap>\n      <NavBtn type=\"submit\">Сonfirm</NavBtn>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.li`\n  width: 900px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  background-color: ${p => p.theme.colors.secondBg};\n  border-radius: ${p => p.theme.radii.normal};\n  & + & {\n    margin-top: 15px;\n  }\n`;\n\nexport const Inform = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 80px;\n`;\n\nexport const NameWrap = styled.div`\n  display: flex;\n  align-items: center;\n  min-width: 330px;\n`;\n\nexport const PhoneWrap = styled.div`\n  display: flex;\n  align-items: center;\n  min-width: 230px;\n  margin-left: 35px;\n`;\n\nexport const InformTittle = styled.p`\n  margin: 0px;\n  margin-left: 5px;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  color: ${p => p.theme.colors.mainText};\n`;\n\nexport const Text = styled.p`\n  margin: 0px;\n  margin-left: 10px;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: 800;\n  color: ${p => p.theme.colors.mainText};\n`;\n\nexport const BtnWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-left: auto;\n  width: 170px;\n  height: 35px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { removeContact } from '../../redux/contactsOperation';\nimport { ChangeContact } from '../ChangeContact/ChangeContact';\nimport { IoPersonCircle } from 'react-icons/io5';\nimport { GiRotaryPhone } from 'react-icons/gi';\nimport Button from '@material-ui/core/Button';\nimport {\n  Backdrop,\n  Inform,\n  NameWrap,\n  PhoneWrap,\n  InformTittle,\n  Text,\n  BtnWrap,\n} from './ContactsListItem.styled';\n\nexport const ContactsListItem = ({ contact }) => {\n  const [isChangeContact, setIsChangeContact] = useState(false);\n  const isLoading = useSelector(state => state.contacts.removeContactLoading);\n  const dispatch = useDispatch();\n\n  const toggleShowChangeMenu = () => {\n    setIsChangeContact(!isChangeContact);\n  };\n\n  const { id, name, number } = contact;\n  return (\n    <Backdrop>\n      <Inform>\n        <NameWrap>\n          <IoPersonCircle size={30} />\n          <InformTittle>name: </InformTittle>\n          <Text>{name}</Text>\n        </NameWrap>\n        <PhoneWrap>\n          <GiRotaryPhone size={30} />\n          <InformTittle>number: </InformTittle>\n          <Text>{number}</Text>\n        </PhoneWrap>\n        <BtnWrap>\n          <Button\n            type=\"button\"\n            color={'primary'}\n            size={'small'}\n            variant={'outlined'}\n            onClick={toggleShowChangeMenu}\n          >\n            Change\n          </Button>\n          <Button\n            color={'secondary'}\n            size={'small'}\n            type=\"button\"\n            variant={'outlined'}\n            onClick={() => dispatch(removeContact(id))}\n            disabled={isLoading}\n          >\n            Delate\n          </Button>\n        </BtnWrap>\n      </Inform>\n      {isChangeContact && (\n        <ChangeContact\n          nameForChange={name}\n          numberForChange={number}\n          id={id}\n          setIsChangeContact={setIsChangeContact}\n          toggleShowChangeMenu={toggleShowChangeMenu}\n        />\n      )}\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0px;\n  padding: 0px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contactsOperation';\nimport { ContactsListItem } from '../ContactsListItem/ContactsListItem';\nimport { List } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const visibleContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <ContactsListItem contact={contact} key={contact.id} />\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\nimport { IoPersonCircle } from 'react-icons/io5';\nimport { GiRotaryPhone } from 'react-icons/gi';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: space-between;\n  width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const InputWrap = styled.div`\n  position: relative;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  margin-left: 20px;\n  color: ${p => p.theme.colors.mainText};\n`;\n\nexport const Input = styled.input`\n  color: #000000;\n  font-weight: 400;\n  width: 300px;\n  height: 40px;\n  padding: 3px 20px 3px 40px;\n  margin-left: 5px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: inset 0px 0px 12px 0px rgba(0, 0, 0, 0.35);\n  border: none;\n  background: ${p => p.theme.colors.inputBg};\n  font-size: ${p => p.theme.fontSizes.m};\n  opacity: 0.9;\n`;\n\nexport const PersonIcon = styled(IoPersonCircle)`\n  position: absolute;\n  top: 8px;\n  left: 95px;\n  height: 25px;\n  width: 25px;\n  z-index: 5;\n`;\n\nexport const PhoneIcon = styled(GiRotaryPhone)`\n  position: absolute;\n  top: 8px;\n  left: 100px;\n  height: 25px;\n  width: 25px;\n  z-index: 5;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { createContact } from '../../redux/contactsOperation';\nimport { Button } from '@material-ui/core';\nimport {\n  Form,\n  Input,\n  InputWrap,\n  Label,\n  PersonIcon,\n  PhoneIcon,\n} from './PhoneBookForm.styled';\n\nexport const PhoneBookForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(state => state.contacts.contacts);\n  const isLoading = useSelector(state => state.contacts.createContactLoading);\n\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        toast.error(`case ${name} doesn't support`);\n        break;\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const isRepeatContact = contacts.find(\n      ({ name: existedName }) =>\n        existedName.toLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (isRepeatContact) {\n      toast.error(` ${name} is already in contacts.`);\n      return;\n    }\n\n    try {\n      dispatch(createContact({ name, number }));\n    } catch (error) {}\n    toast.success(`contact ${name} successfully registered`);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <InputWrap>\n        <Label htmlFor=\"name\">Name</Label>\n        <PersonIcon />\n        <Input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          placeholder=\"Jhon Dou\"\n          id=\"name\"\n          required\n          minLength={3}\n          maxLength={20}\n          onChange={onChange}\n        />\n      </InputWrap>\n\n      <InputWrap>\n        <Label htmlFor=\"tel\">Phone</Label>\n        <PhoneIcon />\n        <Input\n          type=\"tel\"\n          value={number}\n          contained\n          name=\"number\"\n          placeholder=\"+380991111111\"\n          id=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={onChange}\n        />\n      </InputWrap>\n      <Button\n        type=\"submit\"\n        disabled={isLoading}\n        variant={'contained'}\n        color={'primary'}\n      >\n        Add new contact\n      </Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FiFilter } from 'react-icons/fi';\n\nexport const InputWrap = styled.div`\n  position: relative;\n  width: 360px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  color: ${p => p.theme.colors.mainText};\n`;\n\nexport const Input = styled.input`\n  color: #000000;\n  font-weight: 400;\n  width: 300px;\n  height: 40px;\n  padding: 3px 20px 3px 40px;\n  margin-left: 5px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: inset 0px 0px 12px 0px rgba(0, 0, 0, 0.35);\n  border: none;\n  background: ${p => p.theme.colors.inputBg};\n  font-size: ${p => p.theme.fontSizes.m};\n  opacity: 0.9;\n`;\n\nexport const FilterIcon = styled(FiFilter)`\n  position: absolute;\n  top: 8px;\n  left: 67px;\n  height: 25px;\n  width: 25px;\n  z-index: 5;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contactsSlice';\nimport { Label, Input, InputWrap, FilterIcon } from './ContactsFilter.styled';\n\nexport const ContactsFilter = () => {\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <InputWrap>\n      <Label htmlFor=\"filter\">Filter</Label>\n      <FilterIcon />\n      <Input\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        id=\"filter\"\n      />\n    </InputWrap>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Tittle = styled.h1`\n  margin: 0px;\n  margin-bottom: 15px;\n  text-align: center;\n  color: ${p => p.theme.colors.mainText};\n  font-size: ${p => p.theme.fontSizes.xl};\n  line-height: 1.4;\n`;\n","import { ContactsList } from '../../components/ContactsList/ContactsList';\nimport { PhoneBookForm } from '../../components/PhoneBookForm/PhoneBookForm';\nimport { ContactsFilter } from '../../components/ContactsFilter/ContactsFilter';\nimport { Tittle } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <Tittle>Contacts</Tittle>\n      <PhoneBookForm />\n      <ContactsFilter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","InputWrap","Label","p","theme","colors","mainText","Input","radii","normal","inputBg","fontSizes","m","PersonIcon","IoPersonCircle","PhoneIcon","GiRotaryPhone","NavBtn","borders","none","xs","ChangeContact","nameForChange","numberForChange","id","toggleShowChangeMenu","useState","name","setName","number","setNumber","contacts","useSelector","state","dispatch","useDispatch","onChange","e","currentTarget","value","toast","onSubmit","preventDefault","find","changeContact","error","htmlFor","type","minLength","maxLength","placeholder","required","pattern","title","Backdrop","secondBg","Inform","NameWrap","PhoneWrap","InformTittle","fontWeights","Text","BtnWrap","ContactsListItem","contact","isChangeContact","setIsChangeContact","isLoading","removeContactLoading","size","Button","color","variant","onClick","removeContact","disabled","List","ContactsList","filter","useEffect","getContacts","visibleContacts","toLowerCase","includes","map","PhoneBookForm","createContactLoading","toLocaleLowerCase","createContact","contained","FilterIcon","FiFilter","ContactsFilter","changeFilter","target","Tittle","xl"],"sourceRoot":""}