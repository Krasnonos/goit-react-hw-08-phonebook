{"version":3,"file":"static/js/85.46a26e72.chunk.js","mappings":"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","sources":["components/ChangeContact/ChangeContact.jsx","components/ContactsListItem/ContactsListItem.styled.js","components/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/PhoneBookForm/PhoneBookForm.styled.js","components/PhoneBookForm/PhoneBookForm.jsx","components/ContactsFilter/ContactsFilter.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { changeContact } from '../../redux/contactsOperation';\n\nexport const ChangeContact = ({\n  nameForChange,\n  numberForChange,\n  id,\n  toggleShowChangeMenu,\n}) => {\n  const [name, setName] = useState(() => nameForChange);\n  const [number, setNumber] = useState(() => numberForChange);\n  const contacts = useSelector(state => state.contacts.contacts);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        toast.error(`case ${name} doesn't support`);\n        break;\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const isRepeatContact = contacts.find(\n      ({ name: existedName }) =>\n        existedName.toLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (isRepeatContact) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    }\n\n    try {\n      dispatch(changeContact({ id, name, number }));\n    } catch (error) {}\n    toast.success(`contact ${name} was successfully changed`);\n    toggleShowChangeMenu();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        value={name}\n        name=\"name\"\n        minLength={3}\n        onChange={onChange}\n        required\n      />\n      <input\n        type=\"tel\"\n        value={number}\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={onChange}\n        required\n      />\n      <button type=\"submit\">aprove changes</button>\n    </form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.li`\n  position: relative;\n  width: 900px;\n  min-height: 80px;\n  margin-left: auto;\n  margin-right: auto;\n  & + & {\n    margin-top: 15px;\n  }\n`;\n\nexport const Item = styled.div`\n  position: absolute;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  padding: 10px 20px;\n  z-index: 9;\n`;\nexport const Layout = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: ${p => p.theme.colors.secondBg};\n  border-radius: ${p => p.theme.radii.normal};\n`;\n\nexport const DescrWrap = styled.div`\n  display: flex;\n  align-items: center;\n  min-width: 330px;\n\n  & + & {\n    margin-left: 40px;\n  }\n`;\n\nexport const Information = styled.p`\n  margin-left: 5px;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  color: ${p => p.theme.colors.mainText};\n`;\n\nexport const Text = styled.p`\n  margin-left: 5px;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: 800;\n  color: ${p => p.theme.colors.mainText};\n`;\n\nexport const BtnWrap = styled.div`\n  margin-left: auto;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { removeContact } from '../../redux/contactsOperation';\nimport { ChangeContact } from '../ChangeContact/ChangeContact';\nimport { IoPersonCircle } from 'react-icons/io5';\nimport { GiRotaryPhone } from 'react-icons/gi';\nimport {\n  Backdrop,\n  Item,\n  Layout,\n  DescrWrap,\n  Information,\n  Text,\n  BtnWrap,\n} from './ContactsListItem.styled';\n\nexport const ContactsListItem = ({ contact }) => {\n  const [isChangeContact, setIsChangeContact] = useState(false);\n  const isLoading = useSelector(state => state.contacts.removeContactLoading);\n  const dispatch = useDispatch();\n\n  const toggleShowChangeMenu = () => {\n    setIsChangeContact(!isChangeContact);\n  };\n\n  const { id, name, number } = contact;\n  return (\n    <Backdrop>\n      <Item>\n        <DescrWrap>\n          <IoPersonCircle size={30} />\n          <Information>name: </Information>\n          <Text>{name}</Text>\n        </DescrWrap>\n        <DescrWrap>\n          <GiRotaryPhone size={30} />\n          <Information>number: </Information>\n          <Text>{number}</Text>\n        </DescrWrap>\n        <BtnWrap>\n          <button type=\"button\" onClick={toggleShowChangeMenu}>\n            change\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => dispatch(removeContact(id))}\n            disabled={isLoading}\n          >\n            delate\n          </button>\n        </BtnWrap>\n        {isChangeContact && (\n          <ChangeContact\n            nameForChange={name}\n            numberForChange={number}\n            id={id}\n            setIsChangeContact={setIsChangeContact}\n            toggleShowChangeMenu={toggleShowChangeMenu}\n          />\n        )}\n      </Item>\n      <Layout></Layout>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0px;\n  padding: 0px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contactsOperation';\nimport { ContactsListItem } from '../ContactsListItem/ContactsListItem';\nimport { List } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const visibleContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <ContactsListItem contact={contact} key={contact.id} />\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\nimport { IoPersonCircle } from 'react-icons/io5';\nimport { GiRotaryPhone } from 'react-icons/gi';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: space-between;\n  width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const InputWrap = styled.div`\n  position: relative;\n`;\n\nexport const Label = styled.label`\n  font-size: 20px;\n  margin-left: 20px;\n  color: ${p => p.theme.colors.mainText};\n`;\n\nexport const Input = styled.input`\n  color: #000000;\n  font-weight: 400;\n  width: 300px;\n  height: 40px;\n  padding: 3px 20px 3px 40px;\n  margin-left: 5px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: inset 0px 0px 12px 0px rgba(0, 0, 0, 0.35);\n  border: none;\n  background: ${p => p.theme.colors.inputBg};\n  font-size: ${p => p.theme.fontSizes.m};\n  opacity: 0.9;\n`;\n\nexport const PersonIcon = styled(IoPersonCircle)`\n  position: absolute;\n  top: 8px;\n  left: 95px;\n  height: 25px;\n  width: 25px;\n  z-index: 5;\n`;\n\nexport const PhoneIcon = styled(GiRotaryPhone)`\n  position: absolute;\n  top: 8px;\n  left: 100px;\n  height: 25px;\n  width: 25px;\n  z-index: 5;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { createContact } from '../../redux/contactsOperation';\nimport { Button } from '@material-ui/core';\nimport {\n  Form,\n  Input,\n  InputWrap,\n  Label,\n  PersonIcon,\n  PhoneIcon,\n} from './PhoneBookForm.styled';\n\nexport const PhoneBookForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(state => state.contacts.contacts);\n  const isLoading = useSelector(state => state.contacts.createContactLoading);\n\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        toast.error(`case ${name} doesn't support`);\n        break;\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const isRepeatContact = contacts.find(\n      ({ name: existedName }) =>\n        existedName.toLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (isRepeatContact) {\n      toast.error(` ${name} is already in contacts.`);\n      return;\n    }\n\n    try {\n      dispatch(createContact({ name, number }));\n    } catch (error) {}\n    toast.success(`contact ${name} successfully registered`);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <InputWrap>\n        <Label htmlFor=\"name\">Name</Label>\n        <PersonIcon />\n        <Input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          placeholder=\"Jhon Dou\"\n          id=\"name\"\n          required\n          minLength={3}\n          maxLength={20}\n          onChange={onChange}\n        />\n      </InputWrap>\n\n      <InputWrap>\n        <Label htmlFor=\"tel\">Phone</Label>\n        <PhoneIcon />\n        <Input\n          type=\"tel\"\n          value={number}\n          contained\n          name=\"number\"\n          placeholder=\"+380991111111\"\n          id=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={onChange}\n        />\n      </InputWrap>\n      <Button\n        type=\"submit\"\n        disabled={isLoading}\n        variant={'contained'}\n        color={'primary'}\n      >\n        Add new contact\n      </Button>\n    </Form>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contactsSlice';\n\nexport const ContactsFilter = () => {\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <label htmlFor=\"filter\">Filter</label>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        id=\"filter\"\n      />\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Tittle = styled.h1`\n  margin: 0px;\n  margin-bottom: 15px;\n  text-align: center;\n  color: ${p => p.theme.colors.mainText};\n  font-size: ${p => p.theme.fontSizes.xl};\n  line-height: 1.4;\n`;\n\nexport const NavBtn = styled.button`\n  position: absolute;\n  top: 20px;\n  right: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 92px;\n  height: 42px;\n  margin-right: auto;\n  margin-left: auto;\n  border-radius: 3px;\n  border: ${p => p.theme.borders.none};\n  text-decoration: none;\n  text-transform: uppercase;\n  background-color: #3f51b5;\n  color: white;\n  box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%),\n    0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\n`;\n","import { useDispatch } from 'react-redux';\nimport { userLogout } from '../../redux/authOperation';\nimport { ContactsList } from '../../components/ContactsList/ContactsList';\nimport { PhoneBookForm } from '../../components/PhoneBookForm/PhoneBookForm';\nimport { ContactsFilter } from '../../components/ContactsFilter/ContactsFilter';\nimport { NavBtn, Tittle } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <NavBtn type=\"button\" onClick={() => dispatch(userLogout())}>\n        Log Out\n      </NavBtn>\n      <Tittle>Contacts</Tittle>\n      <PhoneBookForm />\n      <ContactsFilter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ChangeContact","nameForChange","numberForChange","id","toggleShowChangeMenu","useState","name","setName","number","setNumber","contacts","useSelector","state","dispatch","useDispatch","onChange","e","currentTarget","value","toast","onSubmit","preventDefault","find","toLowerCase","toLocaleLowerCase","changeContact","error","type","minLength","required","pattern","title","Backdrop","styled","Item","Layout","p","theme","colors","secondBg","radii","normal","DescrWrap","Information","fontSizes","m","fontWeights","mainText","Text","BtnWrap","ContactsListItem","contact","isChangeContact","setIsChangeContact","isLoading","removeContactLoading","size","onClick","removeContact","disabled","List","ContactsList","filter","useEffect","getContacts","visibleContacts","includes","map","Form","InputWrap","Label","Input","inputBg","PersonIcon","IoPersonCircle","PhoneIcon","GiRotaryPhone","PhoneBookForm","createContactLoading","createContact","htmlFor","placeholder","maxLength","contained","Button","variant","color","ContactsFilter","changeFilter","target","Tittle","xl","NavBtn","borders","none","userLogout"],"sourceRoot":""}