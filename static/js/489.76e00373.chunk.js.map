{"version":3,"file":"static/js/489.76e00373.chunk.js","mappings":"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","sources":["components/ChangeContact/ChangeContact.jsx","components/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","components/PhoneBookForm/PhoneBookForm.jsx","components/ContactsFilter/ContactsFilter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { changeContact } from '../../redux/contactsOperation';\n\nexport const ChangeContact = ({\n  nameForChange,\n  numberForChange,\n  id,\n  toggleShowChangeMenu,\n}) => {\n  const [name, setName] = useState(() => nameForChange);\n  const [number, setNumber] = useState(() => numberForChange);\n  const contacts = useSelector(state => state.contacts.contacts);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        toast.error(`case ${name} doesn't support`);\n        break;\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const isRepeatContact = contacts.find(\n      ({ name: existedName }) =>\n        existedName.toLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (isRepeatContact) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    }\n\n    try {\n      dispatch(changeContact({ id, name, number }));\n    } catch (error) {}\n    toast.success(`contact ${name} was successfully changed`);\n    toggleShowChangeMenu();\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        value={name}\n        name=\"name\"\n        minLength={3}\n        onChange={onChange}\n        required\n      />\n      <input\n        type=\"tel\"\n        value={number}\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={onChange}\n        required\n      />\n      <button type=\"submit\">aprove changes</button>\n    </form>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { removeContact } from '../../redux/contactsOperation';\nimport { ChangeContact } from '../ChangeContact/ChangeContact';\n\nexport const ContactsListItem = ({ contact }) => {\n  const [isChangeContact, setIsChangeContact] = useState(false);\n  const isLoading = useSelector(state => state.contacts.removeContactLoading);\n  const dispatch = useDispatch();\n\n  const toggleShowChangeMenu = () => {\n    setIsChangeContact(!isChangeContact);\n  };\n\n  const { id, name, number } = contact;\n  return (\n    <li>\n      <p>{name}</p>\n      <p>{number}</p>\n      <button type=\"button\" onClick={toggleShowChangeMenu}>\n        change\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => dispatch(removeContact(id))}\n        disabled={isLoading}\n      >\n        delate\n      </button>\n      {isChangeContact && (\n        <ChangeContact\n          nameForChange={name}\n          numberForChange={number}\n          id={id}\n          setIsChangeContact={setIsChangeContact}\n          toggleShowChangeMenu={toggleShowChangeMenu}\n        />\n      )}\n    </li>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contactsOperation';\nimport { ContactsListItem } from '../ContactsListItem/ContactsListItem';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const visibleContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n\n  return (\n    <ul>\n      {visibleContacts.map(contact => (\n        <ContactsListItem contact={contact} key={contact.id} />\n      ))}\n    </ul>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { createContact } from '../../redux/contactsOperation';\n\nexport const PhoneBookForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(state => state.contacts.contacts);\n  const isLoading = useSelector(state => state.contacts.createContactLoading);\n\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        toast.error(`case ${name} doesn't support`);\n        break;\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const isRepeatContact = contacts.find(\n      ({ name: existedName }) =>\n        existedName.toLowerCase() === name.toLocaleLowerCase()\n    );\n\n    if (isRepeatContact) {\n      toast.error(` ${name} is already in contacts.`);\n      return;\n    }\n\n    try {\n      dispatch(createContact({ name, number }));\n    } catch (error) {}\n    toast.success(`contact ${name} successfully registered`);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        value={name}\n        name=\"name\"\n        placeholder=\"Jhon Dou\"\n        required\n        minLength={3}\n        onChange={onChange}\n      />\n      <input\n        type=\"tel\"\n        value={number}\n        name=\"number\"\n        placeholder=\"+380991111111\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={onChange}\n      />\n      <button type=\"submit\" disabled={isLoading}>\n        Add new contact\n      </button>\n    </form>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contactsSlice';\n\nexport const ContactsFilter = () => {\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        id=\"filter\"\n      />\n      <label htmlFor=\"filter\">Filter</label>\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { userLogout } from '../../redux/authOperation';\nimport { ContactsList } from '../../components/ContactsList/ContactsList';\nimport { PhoneBookForm } from '../../components/PhoneBookForm/PhoneBookForm';\nimport { ContactsFilter } from '../../components/ContactsFilter/ContactsFilter';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <button type=\"button\" onClick={() => dispatch(userLogout())}>\n        Log Out\n      </button>\n      <h1>Contacts</h1>\n      <PhoneBookForm />\n      <ContactsFilter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ChangeContact","nameForChange","numberForChange","id","toggleShowChangeMenu","useState","name","setName","number","setNumber","contacts","useSelector","state","dispatch","useDispatch","onChange","e","currentTarget","value","toast","onSubmit","preventDefault","find","toLowerCase","toLocaleLowerCase","changeContact","error","type","minLength","required","pattern","title","ContactsListItem","contact","isChangeContact","setIsChangeContact","isLoading","removeContactLoading","onClick","removeContact","disabled","ContactsList","filter","useEffect","getContacts","visibleContacts","includes","map","PhoneBookForm","createContactLoading","createContact","placeholder","ContactsFilter","changeFilter","target","htmlFor","userLogout"],"sourceRoot":""}